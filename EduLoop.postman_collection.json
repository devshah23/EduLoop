{
	"info": {
		"_postman_id": "589c8cf3-3424-4481-a0ae-19b6f69f9e72",
		"name": "EduLoop",
		"description": "EduLoop is a autograding exam platform, which can be used in schools for daily test assignments.\n\nPlease set baseURL for backend FASTAPI service,Ex-http://127.0.0.1:8000",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32372485"
	},
	"item": [
		{
			"name": "auth",
			"item": [
				{
					"name": "Login",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "// {\n//   \"email\": \"t2@gmail.com\",\n//   \"password\": \"t2\",\n//   \"role\": \"faculty\"\n// }\n\n{\n\"email\": \"s6@gmail.com\",\n  \"password\": \"s6\",\n  \"role\": \"student\"\n}\n\n\n// {\n//   \"email\": \"user@example.com\",\n//   \"password\": \"string\",\n//   \"role\": \"faculty\"\n// }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							]
						},
						"description": "Logs in a user (faculty or student) using email, password, and role. Creates and send cookies on success.  \n  \n_**Use the following format for student login:**_\n\n```\n{\n  \"email\": \"s1@gmail.com\",\n  \"password\": \"s1\",\n  \"role\": \"student\"\n}\n\n ```\n\nTo test with different students, just change `s1` to `s2`, `s3`, etc. in both email and password:\n\n- `s2@gmail.com` / `s2`\n    \n- `s3@gmail.com` / `s3`  \n    \n\n_**Use the following format for faculty login:**_\n\n```\n{\n  \"email\": \"t1@gmail.com\",\n  \"password\": \"t1\",\n  \"role\": \"faculty\"\n}\n\n ```\n\nChange `t1` to `t2`, `t3`, etc. for testing with other faculty accounts:\n\n- `t2@gmail.com` / `t2`\n    \n- `t3@gmail.com` / `t3`"
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"vCrf9bOtQ@YIySlymqOJHLqoFtIXzTnzpGSno.cj\",\n  \"password\": \"string\",\n  \"role\": \"faculty\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Validation Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"vCrf9bOtQ@YIySlymqOJHLqoFtIXzTnzpGSno.cj\",\n  \"password\": \"string\",\n  \"role\": \"faculty\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    },\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Faculty Signup",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"t4@gmail.com\",\n  \"password\": \"t4\",\n  \"name\": \"t4\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/faculty-create",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"faculty-create"
							]
						},
						"description": "Registers a new faculty user by providing their name, email, and password."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"vibN3p9QJ3VL@CqTIYBqCMrlXaiKf.xyn\",\n  \"password\": \"string\",\n  \"name\": \"string\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/faculty-create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"faculty-create"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Validation Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"vibN3p9QJ3VL@CqTIYBqCMrlXaiKf.xyn\",\n  \"password\": \"string\",\n  \"name\": \"string\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/faculty-create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"faculty-create"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    },\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Student Signup",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"s6@gmail.com\",\n  \"password\": \"s6\",\n  \"name\": \"s6\",\n  \"class_id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/student-create",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"student-create"
							]
						},
						"description": "### Registers a New Student User\n\nThis endpoint allows for the registration of a new student user.\n\n#### Request\n\n**Method:** POST  \n**URL:** `{{baseUrl}}/auth/student-create`\n\n**Request Body (JSON):**\n\n``` json\n{\n  \"email\": \"string\",      // The email address of the student (required)\n  \"password\": \"string\",   // The password for the student account (required)\n  \"name\": \"string\",       // The full name of the student (required)\n  \"class_id\": \"integer\"   // The ID of the class the student is being assigned to \n}\n\n ```"
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"zD1-G5-iG@JfnTGrukiLthVuuPqv.aj\",\n  \"password\": \"string\",\n  \"name\": \"string\",\n  \"class_id\": 780\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/student-create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"student-create"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Validation Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"zD1-G5-iG@JfnTGrukiLthVuuPqv.aj\",\n  \"password\": \"string\",\n  \"name\": \"string\",\n  \"class_id\": 780\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/student-create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"student-create"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    },\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Logout",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/auth/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"logout"
							]
						},
						"description": "Logs out the current authenticated user."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/auth/logout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"logout"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				}
			],
			"description": "The folder contains all the auth related endpoints like Login,Create Student,Faculty, Logout"
		},
		{
			"name": "students",
			"item": [
				{
					"name": "{student_id}",
					"item": [
						{
							"name": "Get Student",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/students/:student_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"students",
										":student_id"
									],
									"variable": [
										{
											"key": "student_id",
											"value": "1",
											"description": "(Required) "
										}
									]
								},
								"description": "### Get Student Information\n\nThis endpoint retrieves the details of a specific student identified by their unique `student_id`.\n\n#### Request\n\n- **Method**: `GET`\n    \n- **Endpoint**: `{{baseUrl}}/students/:student_id`\n    \n- **Path Parameters**:\n    \n    - `student_id` (required): The unique identifier of the student whose information is being requested.\n        \n\n#### Response\n\n- **Status Code**: `200 OK`\n    \n- **Content-Type**: `application/json`\n    \n- **Response Body**:\n    \n    - { \"student\": { \"name\": \"string\", \"email\": \"string\", \"updated_by\": \"integer\", \"class_id\": \"integer\", \"id\": \"integer\" }}\n        \n    - The `student` object includes:\n        \n        - `name`: The name of the student.\n            \n        - `email`: The email address of the student.\n            \n        - `updated_by`: The ID of the user who last updated the student's information.\n            \n        - `class_id`: The ID of the class the student is enrolled in.\n            \n        - `id`: The unique identifier of the student."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/students/:student_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"students",
												":student_id"
											],
											"variable": [
												{
													"key": "student_id",
													"value": "9749",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Validation Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/students/:student_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"students",
												":student_id"
											],
											"variable": [
												{
													"key": "student_id",
													"value": "9749",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    },\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Update Student",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"s1\",\n  \"email\": \"s1@gmail.com\",\n  \"password\": \"string\",\n  \"updated_by\": 1,\n  \"class_id\": 1\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/students/:student_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"students",
										":student_id"
									],
									"variable": [
										{
											"key": "student_id",
											"value": "1",
											"description": "(Required) "
										}
									]
								},
								"description": "## Update Student Information\n\nThis endpoint allows you to update the details of a specific student identified by their `student_id`. The request uses the HTTP PATCH method to modify existing student records.\n\n### Request Parameters\n\nThe request body must be in JSON format and include the following parameters,they are optional:\n\n- **name** (string): The name of the student.\n    \n- **email** (string): The email address of the student.\n    \n- **password** (string): The password for the student's account.\n    \n- **updated_by** (integer): The ID of the user making the update.\n    \n- **class_id** (integer): The ID of the class to which the student belongs.\n    \n\n### Response\n\nOn a successful update, the response will return a status code of `200` and a JSON object containing the following:\n\n- **message** (string): A message indicating the result of the operation (may be empty).\n    \n- **student** (object): An object representing the updated student, containing:\n    \n    - **name** (string): The updated name of the student.\n        \n    - **email** (string): The updated email address of the student.\n        \n    - **updated_by** (integer): The ID of the user who made the update.\n        \n    - **class_id** (integer): The ID of the class the student is enrolled in.\n        \n    - **id** (integer): The unique identifier of the student."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"string\",\n  \"email\": \"9r9Ha4LtLx@ccdxqsLBREepqHloMtGLKUSKAxan.wqnf\",\n  \"password\": \"string\",\n  \"updated_by\": 2088,\n  \"class_id\": 8126\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/students/:student_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"students",
												":student_id"
											],
											"variable": [
												{
													"key": "student_id",
													"value": "9749",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Validation Error",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"string\",\n  \"email\": \"9r9Ha4LtLx@ccdxqsLBREepqHloMtGLKUSKAxan.wqnf\",\n  \"password\": \"string\",\n  \"updated_by\": 2088,\n  \"class_id\": 8126\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/students/:student_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"students",
												":student_id"
											],
											"variable": [
												{
													"key": "student_id",
													"value": "9749",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    },\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Delete Student",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/students/:student_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"students",
										":student_id"
									],
									"variable": [
										{
											"key": "student_id",
											"value": "",
											"description": "(Required) "
										}
									]
								},
								"description": "## DELETE /students/:student_id\n\nThis endpoint is used to delete a specific student record from the database using their unique identifier (`student_id`).\n\n### Request Parameters\n\n- `student_id` (path parameter): The unique identifier of the student that you wish to delete. This parameter is required and must be provided in the URL."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/students/:student_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"students",
												":student_id"
											],
											"variable": [
												{
													"key": "student_id",
													"value": "9749",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Validation Error",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/students/:student_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"students",
												":student_id"
											],
											"variable": [
												{
													"key": "student_id",
													"value": "9749",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    },\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Create Student",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"s8\",\n  \"email\": \"s8@gmail.com\",\n  \"password\": \"s8\",\n  \"class_id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/students/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"students",
								""
							]
						},
						"description": "## Add Student\n\nThis endpoint allows you to create a new student record in the system. By sending a POST request to `{{baseUrl}}/students/`, you can add a student with the specified details.\n\n### Request Format\n\nThe request body must be in JSON format and should contain the following parameters:\n\n- **name** (string): The name of the student.\n    \n- **email** (string): The email address of the student.\n    \n- **password** (string): The password for the student account.\n    \n- **class_id** (integer)(optional): The ID of the class to which the student is assigned.If not assigned or invalid then current faculty class_id will be given.And if faculty is not a class teacher then error will be thrown.\n    \n\n#### Example Request Body\n\n``` json\n{\n  \"name\": \"s7\",\n  \"email\": \"s7@gmail.com\",\n  \"password\": \"s7\",\n  \"updated_by\": 1,\n  \"class_id\": 1\n}\n\n ```"
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"string\",\n  \"email\": \"ymjeDjLnrCckx@vfxpoFdeugXCnE.unx\",\n  \"password\": \"string\",\n  \"updated_by\": 1601,\n  \"class_id\": 7811\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/students/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"students",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Validation Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"string\",\n  \"email\": \"ymjeDjLnrCckx@vfxpoFdeugXCnE.unx\",\n  \"password\": \"string\",\n  \"updated_by\": 1601,\n  \"class_id\": 7811\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/students/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"students",
										""
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    },\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Class Students",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/students/all/:class_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"students",
								"all",
								":class_id"
							],
							"query": [
								{
									"key": "",
									"value": null,
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "class_id",
									"value": "1"
								}
							]
						},
						"description": "## Get All Students by Class ID\n\nThis endpoint retrieves a list of all students associated with a specific class identified by the `class_id` parameter.\n\n### Request Parameters\n\n- **class_id** (path parameter, required): The unique identifier for the class whose students you want to retrieve.\n    \n\n### Notes\n\n- This endpoint is useful for retrieving student information for administrative purposes or for displaying in educational applications.\n    \n- If class not found it will say Class not found error."
					},
					"response": []
				}
			]
		},
		{
			"name": "classes",
			"item": [
				{
					"name": "{class_id}",
					"item": [
						{
							"name": "Get Class",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/classes/:class_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"classes",
										":class_id"
									],
									"variable": [
										{
											"key": "class_id",
											"value": "1",
											"description": "(Required) "
										}
									]
								},
								"description": "### Retrieve Class Information\n\nThis endpoint retrieves detailed information about a specific class identified by its unique `class_id`. It is a redis cached route.\n\n#### Request\n\n- **Method**: GET\n    \n- **URL**: `{{baseUrl}}/classes/:class_id`\n    \n- **Path Parameter**:\n    \n    - `class_id` (string): The unique identifier for the class you want to retrieve information about."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/classes/:class_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"classes",
												":class_id"
											],
											"variable": [
												{
													"key": "class_id",
													"value": "3905",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Validation Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/classes/:class_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"classes",
												":class_id"
											],
											"variable": [
												{
													"key": "class_id",
													"value": "3905",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    },\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Update Class",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Physics\",\n  \"faculty_id\": 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/classes/:class_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"classes",
										":class_id"
									],
									"variable": [
										{
											"key": "class_id",
											"value": "1",
											"description": "(Required) "
										}
									]
								},
								"description": "## PATCH /classes/:class_id\n\nThis endpoint allows you to update the details of a specific class identified by `:class_id`. The request is made using the HTTP PATCH method, which is typically used for partial updates to a resource. It also invalidates redis cache.\n\n### Request Parameters\n\nThe request body should be in JSON format and can include the following parameters:\n\n- **name** (string): The name of the class you want to update.\n    \n- **faculty_id** (integer): The ID of the faculty associated with the class.\n    \n\n#### Example Request Body\n\n``` json\n{\n  \"name\": \"Physics\",\n  \"faculty_id\": 1\n}\n\n ```"
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"string\",\n  \"faculty_id\": 9131\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/classes/:class_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"classes",
												":class_id"
											],
											"variable": [
												{
													"key": "class_id",
													"value": "3905",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Validation Error",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"string\",\n  \"faculty_id\": 9131\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/classes/:class_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"classes",
												":class_id"
											],
											"variable": [
												{
													"key": "class_id",
													"value": "3905",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    },\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Delete Class",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/classes/:class_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"classes",
										":class_id"
									],
									"variable": [
										{
											"key": "class_id",
											"value": "7",
											"description": "(Required) "
										}
									]
								},
								"description": "## DELETE Class\n\nThis endpoint is used to delete a specific class identified by its unique `class_id`.\n\n### Request\n\n- **Method**: `DELETE`\n    \n- **Endpoint**: `{{baseUrl}}/classes/:class_id`\n    \n- **Path Parameter**:\n    - `class_id` (required): The unique identifier of the class that you wish to delete.\n        \n\n### Response\n\n- **Status Code**: `200 OK`\n    \n- **Content-Type**: `application/json`\n    \n- **Response Body**:\n    - `message`: A confirmation message indicating the successful deletion of the class. The message will typically be an empty string."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/classes/:class_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"classes",
												":class_id"
											],
											"variable": [
												{
													"key": "class_id",
													"value": "3905",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Validation Error",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/classes/:class_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"classes",
												":class_id"
											],
											"variable": [
												{
													"key": "class_id",
													"value": "3905",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    },\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Create Class",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Sciencez\",\n  \"faculty_id\": 4\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/classes/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"classes",
								""
							]
						},
						"description": "## Add Class\n\nThis endpoint allows you to add a new class to the system.\n\n### HTTP Method\n\n`POST`\n\n### Endpoint\n\n`{{baseUrl}}/classes/`\n\n### Request Parameters\n\nThe request body must be a JSON object containing the following parameters:\n\n- **name** (string): The name of the class you want to add.\n    \n- **faculty_id** (integer): The ID of the faculty associated with the class.\n    \n\n### Request Example\n\n``` json\n{\n  \"name\": \"Science\",\n  \"faculty_id\": 1\n}\n\n ```"
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"string\",\n  \"faculty_id\": 2844,\n  \"updated_by\": 1257\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/classes/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"classes",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Validation Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"string\",\n  \"faculty_id\": 2844,\n  \"updated_by\": 1257\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/classes/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"classes",
										""
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    },\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Get Classes",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/classes/all",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"classes",
								"all"
							]
						},
						"description": "### Get All Classes\n\nThis endpoint retrieves a list of all classes available in the system. It is useful for clients that need to display or manage the collection of classes.\n\n#### Request Format\n\n- **Method**: GET\n    \n- **URL**: `{{baseUrl}}/classes/all`\n    \n- **Request Body**: No request body is required for this endpoint."
					},
					"response": []
				}
			]
		},
		{
			"name": "assignments",
			"item": [
				{
					"name": "{assignment_id}",
					"item": [
						{
							"name": "Get Assignment",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/assignments/:assignment_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assignments",
										":assignment_id"
									],
									"variable": [
										{
											"key": "assignment_id",
											"value": "10",
											"description": "(Required) "
										}
									]
								},
								"description": "### Retrieve Assignment Details\n\nThis endpoint retrieves the details of a specific assignment based on the provided assignment ID. It can be used by faculty to view assignments they have created or by students to see assignments assigned to them. It is redis cached endpoint.\n\n#### Request Parameters\n\n- `assignment_id` (path parameter): The unique identifier of the assignment you wish to retrieve.\n    \n\n#### Response Structure\n\nOn a successful request, the response will include:\n\n- `message`: A string that may contain additional information about the request (typically empty).\n    \n- `assignment`: An object containing details about the assignment:\n    \n    - `id`: The unique identifier of the assignment.\n        \n    - `title`: The title of the assignment.\n        \n    - `description`: A brief description of the assignment.\n        \n    - `due_date`: The due date for the assignment.\n        \n    - `class_id`: The identifier of the class associated with the assignment.\n        \n    - `created_at`: The timestamp when the assignment was created.\n        \n    - `questions`: An array of questions associated with the assignment, where each question object contains:\n        \n        - `text`: The text of the question.\n            \n        - `answer`: The answer to the question.\n            \n        - `id`: The unique identifier of the question.\n            \n    - `created_by`: The identifier of the user who created the assignment.\n        \n\n#### Example Response\n\n``` json\n{\n  \"message\": \"\",\n  \"assignment\": {\n    \"id\": 0,\n    \"title\": \"\",\n    \"description\": \"\",\n    \"due_date\": \"\",\n    \"class_id\": 0,\n    \"created_at\": \"\",\n    \"questions\": [\n      {\n        \"text\": \"\",\n        \"answer\": \"\",\n        \"id\": 0\n      }\n    ],\n    \"created_by\": 0\n  }\n}\n\n ```"
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/assignments/:assignment_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assignments",
												":assignment_id"
											],
											"variable": [
												{
													"key": "assignment_id",
													"value": "4548",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Validation Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/assignments/:assignment_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assignments",
												":assignment_id"
											],
											"variable": [
												{
													"key": "assignment_id",
													"value": "4548",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    },\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Update Assignment",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"a10\",\n  \"description\": \"working\",\n  \"due_date\": \"2025-09-03T21:58:15.976Z\",\n  \"class_id\": 2,\n  \"questions\": [\n    1,5\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/assignments/:assignment_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assignments",
										":assignment_id"
									],
									"variable": [
										{
											"key": "assignment_id",
											"value": "10",
											"description": "(Required) "
										}
									]
								},
								"description": "### PATCH /assignments/:assignment_id\n\nThis endpoint is used to update an existing assignment based on the provided assignment ID. Faculty route only. Redis uncache applies to this endpoint.\n\n#### Request Body\n\nThe request requires a JSON payload with the following parameters,params are optional:\n\n- **title** (string): The title of the assignment.\n    \n- **description** (string): A brief description of the assignment.\n    \n- **due_date** (string): The due date for the assignment in ISO 8601 format.\n    \n- **class_id** (integer): The ID of the class associated with the assignment.\n    \n- **questions** (array of integers): An array containing the IDs of questions related to the assignment.\n    \n\n#### Example Request\n\n``` json\n{\n  \"title\": \"a10\",\n  \"description\": \"working\",\n  \"due_date\": \"2025-09-03T21:58:15.976Z\",\n  \"class_id\": 2,\n  \"questions\": [1]\n}\n\n ```\n\n#### Expected Response\n\nOn a successful update, the response will return a status code of **200** along with a JSON object containing a message and the updated assignment details:\n\n``` json\n{\n  \"message\": \"\",\n  \"assignment\": {\n    \"id\": 0,\n    \"title\": \"\",\n    \"description\": \"\",\n    \"due_date\": \"\",\n    \"class_id\": 0,\n    \"created_at\": \"\",\n    \"questions\": [\n      {\n        \"text\": \"\",\n        \"answer\": \"\",\n        \"id\": 0\n      }\n    ],\n    \"created_by\": 0\n  }\n}\n\n ```"
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\": \"string\",\n  \"description\": \"string\",\n  \"due_date\": \"1964-05-07T16:43:09.919Z\",\n  \"class_id\": 7178,\n  \"questions\": [\n    8479,\n    7331\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/assignments/:assignment_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assignments",
												":assignment_id"
											],
											"variable": [
												{
													"key": "assignment_id",
													"value": "4548",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Validation Error",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\": \"string\",\n  \"description\": \"string\",\n  \"due_date\": \"1964-05-07T16:43:09.919Z\",\n  \"class_id\": 7178,\n  \"questions\": [\n    8479,\n    7331\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/assignments/:assignment_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assignments",
												":assignment_id"
											],
											"variable": [
												{
													"key": "assignment_id",
													"value": "4548",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    },\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Delete Assignment",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/assignments/:assignment_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assignments",
										":assignment_id"
									],
									"variable": [
										{
											"key": "assignment_id",
											"value": "1",
											"description": "(Required) "
										}
									]
								},
								"description": "## HTTP DELETE Request to Remove an Assignment\n\nThis request is used to delete a specific assignment identified by the `assignment_id`.\n\n### Endpoint\n\n`{{baseUrl}}/assignments/:assignment_id`\n\n### Method\n\n`DELETE`\n\n### Parameters\n\n- `assignment_id` (path parameter): The unique identifier of the assignment that you wish to delete."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/assignments/:assignment_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assignments",
												":assignment_id"
											],
											"variable": [
												{
													"key": "assignment_id",
													"value": "4548",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Validation Error",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/assignments/:assignment_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assignments",
												":assignment_id"
											],
											"variable": [
												{
													"key": "assignment_id",
													"value": "4548",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    },\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Create Assignment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"a13\",\n  \"due_date\": \"2025-08-06T14:05:16Z\",\n  \"class_id\": 2,\n  \"description\": \"string\",\n  \"questions\": [\n    1,5\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/assignments/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assignments",
								""
							]
						},
						"description": "Creates a new assignment including title, due date, and related questions. Only accessible to faculty."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"string\",\n  \"due_date\": \"2003-07-14T03:32:06.995Z\",\n  \"class_id\": 2821,\n  \"description\": \"string\",\n  \"questions\": [\n    4940,\n    8194\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/assignments/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assignments",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Validation Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"string\",\n  \"due_date\": \"2003-07-14T03:32:06.995Z\",\n  \"class_id\": 2821,\n  \"description\": \"string\",\n  \"questions\": [\n    4940,\n    8194\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/assignments/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assignments",
										""
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    },\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Get Assignments",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/assignments/paginated?page=1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assignments",
								"paginated"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								}
							]
						},
						"description": "### Retrieve Assignments\n\nThis API endpoint retrieves all the assignments.\n\n#### Request\n\n- **Method**: GET\n    \n- **URL**: `{{baseUrl}}/assignments/paginated?page={page}`\n    \n\n**Query Parameters**:\n\n- `page` (integer): The page number of the assignments to retrieve. For example, `page=1` retrieves the first page of assignments."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/assignments/paginated?page=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assignments",
										"paginated"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Validation Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/assignments/paginated?page=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assignments",
										"paginated"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    },\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Get Assignments By Me",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/assignments/me?page=1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assignments",
								"me"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								}
							]
						},
						"description": "### Retrieve Assignments\n\nThis endpoint retrieves assignments created by the current faculty.\n\n#### Request\n\n- **Method**: GET\n    \n- **URL**: `{{baseUrl}}/assignments/me?page=1`\n    \n- **Query Parameters**:\n    \n    - `page` (integer): The page number of the results to retrieve. Default is 1.\n        \n\n#### Response\n\n- **Status Code**: 200 OK\n    \n- **Content-Type**: application/json\n    \n- **Response Body**:\n    \n    - `message` (string): A message indicating the result of the request (may be empty).\n        \n    - `assignments` (array): A list of assignment objects, where each object contains:\n        \n        - `title` (string): The title of the assignment.\n            \n        - `description` (string): A brief description of the assignment.\n            \n        - `due_date` (string): The due date of the assignment.\n            \n        - `class_id` (integer): The ID of the class associated with the assignment.\n            \n        - `questions` (array): An array of question IDs related to the assignment.\n            \n        - `id` (integer): The unique identifier for the assignment.\n            \n        - `created_at` (string): The timestamp when the assignment was created.\n            \n        - `created_by` (integer): The ID of the user who created the assignment.\n            \n\n#### Notes\n\n- The response may vary based on the user's assignments. An 404 response may occur if no assignments are found."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/assignments/me?page=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assignments",
										"me"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Validation Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/assignments/me?page=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assignments",
										"me"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    },\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Get Assignments For Me",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/assignments/students-me?page=1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assignments",
								"students-me"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								}
							]
						},
						"description": "### API Request: Retrieve Assignments for Students\n\n**Endpoint:** `{{baseUrl}}/assignments/students-me`\n\n**Method:** `GET`\n\n#### Description\n\nThis endpoint retrieves assignments that have been assigned to the current student.\n\n#### Query Parameters\n\n- `page` (integer, required): Specifies the page number of the results to retrieve. For example, `page=1` will return the first page of assignments.\n    \n\n#### Request Body\n\n- No request body is required for this GET request.\n    \n\n#### Response Format\n\nThe response will be a JSON object. An example of a possible response is shown below:\n\n``` json\n{}\n\n ```\n\nThis indicates that the response structure is currently empty, but typically it would contain the list of assignments along with their details.\n\nThis HTTP GET request is used to retrieve assignments that have been created by the current faculty or assigned to the current student.\n\n#### URL\n\n`{{baseUrl}}/assignments/students-me?page=1`\n\n#### Query Parameters\n\n- `page` (integer): The page number for pagination of the results. Default is `1`.\n    \n\n#### Response Structure\n\nThe response will return a JSON object. The structure of the response is currently unspecified, but it typically contains information regarding the assignments relevant to the user.\n\nExample Response:\n\n``` json\n{}\n\n ```\n\nThis endpoint retrieves assignments that are either created by the current faculty or assigned to the current student.\n\n#### Important Notes:\n\n- Ensure that the user has the necessary permissions to access this resource, as a `403 Forbidden` status indicates insufficient permissions.\n    \n- Pagination is supported; use the `page` query parameter to navigate through multiple pages of assignments.\n    \n\n#### Request\n\n- **Method**: GET\n    \n- **URL**: `{{baseUrl}}/assignments/students-me?page=1`\n    \n\n#### Response\n\n- **Status Codes**:\n    \n    - `200 OK`: Successfully retrieved assignments.\n        \n    - `403 Forbidden`: Access denied due to insufficient permissions.\n        \n- **Response Format**: JSON"
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/assignments/students-me?page=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assignments",
										"students-me"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Validation Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/assignments/students-me?page=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assignments",
										"students-me"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    },\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "faculties",
			"item": [
				{
					"name": "{faculty_id}",
					"item": [
						{
							"name": "Get Faculty",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/faculties/:faculty_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"faculties",
										":faculty_id"
									],
									"variable": [
										{
											"key": "faculty_id",
											"value": "4",
											"description": "(Required) "
										}
									]
								},
								"description": "### Get Faculty Details\n\nThis endpoint retrieves detailed information about a specific faculty member based on their unique identifier.\n\n#### Request\n\n- **Method**: GET\n    \n- **URL**: `{{baseUrl}}/faculties/:faculty_id`\n    \n- **Path Parameter**:\n    \n    - `faculty_id` (string): The unique identifier for the faculty member whose details are being requested."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/faculties/:faculty_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"faculties",
												":faculty_id"
											],
											"variable": [
												{
													"key": "faculty_id",
													"value": "6545",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Validation Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/faculties/:faculty_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"faculties",
												":faculty_id"
											],
											"variable": [
												{
													"key": "faculty_id",
													"value": "6545",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    },\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Update Faculty",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"t1\",\n  \"email\": \"t1@gmail.com\",\n  \"password\": \"t1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/faculties/:faculty_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"faculties",
										":faculty_id"
									],
									"variable": [
										{
											"key": "faculty_id",
											"value": "1",
											"description": "(Required) "
										}
									]
								},
								"description": "## Update Faculty Information\n\nThis endpoint allows you to update the details of a specific faculty member identified by their unique `faculty_id`. You can modify attributes such as the faculty's name, email, and password.\n\n### Request\n\n- **Method**: PATCH\n    \n- **Endpoint**: `{{baseUrl}}/faculties/:faculty_id`\n    \n\n#### Request Body\n\nThe request body must be in JSON format and should include the following fields. Fields are optional:\n\n- **name** (string): The updated name of the faculty member.\n    \n- **email** (string): The updated email address of the faculty member.\n    \n- **password** (string): The new password for the faculty member."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"string\",\n  \"email\": \"yMwyBhW1@wtwLv.ent\",\n  \"password\": \"string\",\n  \"updated_by\": 9067\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/faculties/:faculty_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"faculties",
												":faculty_id"
											],
											"variable": [
												{
													"key": "faculty_id",
													"value": "6545",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Validation Error",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"string\",\n  \"email\": \"yMwyBhW1@wtwLv.ent\",\n  \"password\": \"string\",\n  \"updated_by\": 9067\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/faculties/:faculty_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"faculties",
												":faculty_id"
											],
											"variable": [
												{
													"key": "faculty_id",
													"value": "6545",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    },\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Delete Faculty",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/faculties/:faculty_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"faculties",
										":faculty_id"
									],
									"variable": [
										{
											"key": "faculty_id",
											"value": "4",
											"description": "(Required) "
										}
									]
								},
								"description": "## Delete Faculty\n\nThis endpoint allows you to delete a faculty member from the system using their unique identifier.\n\n### Request Method\n\n`DELETE`\n\n### Endpoint\n\n`{{baseUrl}}/faculties/:faculty_id`\n\n### Path Parameters\n\n- `faculty_id` (string): The unique identifier of the faculty member you wish to delete.\n    \n\n### Note:\n\n**The faculty will only be deleted if the no class is assigned to him. So to delete first ensure this condition.**"
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/faculties/:faculty_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"faculties",
												":faculty_id"
											],
											"variable": [
												{
													"key": "faculty_id",
													"value": "6545",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Validation Error",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/faculties/:faculty_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"faculties",
												":faculty_id"
											],
											"variable": [
												{
													"key": "faculty_id",
													"value": "6545",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    },\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Create Faculty",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"t6\",\n  \"email\": \"t6@gmail.com\",\n  \"password\": \"t6\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/faculties/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"faculties",
								""
							]
						},
						"description": "## Create Faculty\n\nThis endpoint allows you to add a new faculty member to the system. It accepts a JSON payload containing the faculty's details and returns a confirmation response upon successful creation.\n\n### Request\n\n- **Method**: POST\n    \n- **URL**: `{{baseUrl}}/faculties/`\n    \n- **Content-Type**: application/json\n    \n\n#### Request Body\n\nThe request body must be in JSON format and should contain the following parameters:\n\n| Parameter | Type | Description |\n| --- | --- | --- |\n| name | string | The name of the faculty member. |\n| email | string | The email address of the faculty. |\n| password | string | The password for the faculty account. |\n\n**Example Request Body:**\n\n``` json\n{\n  \"name\": \"t6\",\n  \"email\": \"t6@gmail.com\",\n  \"password\": \"t6\"\n}\n\n ```"
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"strin\",\n  \"email\": \"F2E0chg7nZ@JN.cm\",\n  \"password\": \"st\",\n  \"updated_by\": 3284\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/faculties/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"faculties",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Validation Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"strin\",\n  \"email\": \"F2E0chg7nZ@JN.cm\",\n  \"password\": \"st\",\n  \"updated_by\": 3284\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/faculties/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"faculties",
										""
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    },\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "questions",
			"item": [
				{
					"name": "{question_id}",
					"item": [
						{
							"name": "Get Question",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/questions/:question_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"questions",
										":question_id"
									],
									"variable": [
										{
											"key": "question_id",
											"value": "4",
											"description": "(Required) "
										}
									]
								},
								"description": "## Retrieve Question Details\n\nThis endpoint allows you to retrieve the details of a specific question by its unique identifier.\n\n### Request\n\n- **Method**: `GET`\n    \n- **Endpoint**: `{{baseUrl}}/questions/:question_id`\n    \n- **Path Parameters**:\n    \n    - `question_id` (required): The unique identifier of the question you wish to retrieve.\n        \n\n### Response\n\n- **Status Code**: `200 OK`\n    \n- **Content-Type**: `application/json`\n    \n\n### Response Fields\n\n- `message`: A string that may contain additional information regarding the request.\n    \n- `question`: An object containing the details of the question.\n    \n    - `text`: The text of the question.\n        \n    - `answer`: The answer to the question.\n        \n    - `id`: The unique identifier of the question."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/questions/:question_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"questions",
												":question_id"
											],
											"variable": [
												{
													"key": "question_id",
													"value": "399",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Validation Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/questions/:question_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"questions",
												":question_id"
											],
											"variable": [
												{
													"key": "question_id",
													"value": "399",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    },\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Update Question",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"text\":\"string\",\n  \"answer\": \"string\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/questions/:question_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"questions",
										":question_id"
									],
									"variable": [
										{
											"key": "question_id",
											"value": "4",
											"description": "(Required) "
										}
									]
								},
								"description": "### PATCH /questions/:question_id\n\nThis endpoint allows you to update an existing question identified by its unique `question_id`. The purpose of this request is to modify the content of a specific question, including its text and answer.\n\n#### Request Parameters\n\nThe request body must be sent in JSON format and should include the following parameters:\n\n- **text** (string): The updated text of the question. This parameter is required and should contain the new wording for the question.\n    \n- **answer** (string): The updated answer for the question. This parameter is also required and should provide the new answer content.\n    \n\n**Example Request Body:**\n\n``` json\n{\n  \"text\": \"string\",\n  \"answer\": \"Plants need sunlight and water ...\"\n}\n\n ```\n\n#### Response Structure\n\nUpon successful completion of the request, the server will return a JSON object containing the updated question details. The structure of the response is as follows:\n\n- **text** (string): The updated text of the question.\n    \n- **answer** (string): The updated answer for the question.\n    \n- **id** (integer): The unique identifier of the question that was updated."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"text\": \"string\",\n  \"answer\": \"string\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/questions/:question_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"questions",
												":question_id"
											],
											"variable": [
												{
													"key": "question_id",
													"value": "399",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"text\": \"string\",\n  \"answer\": \"string\",\n  \"id\": 8836\n}"
								},
								{
									"name": "Validation Error",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"text\": \"string\",\n  \"answer\": \"string\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/questions/:question_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"questions",
												":question_id"
											],
											"variable": [
												{
													"key": "question_id",
													"value": "399",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    },\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Delete Question",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/questions/:question_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"questions",
										":question_id"
									],
									"variable": [
										{
											"key": "question_id",
											"value": "1",
											"description": "(Required) "
										}
									]
								},
								"description": "### DELETE /questions/:question_id\n\nThis endpoint is used to delete a specific question identified by its unique `question_id`.\n\n#### Request Parameters\n\n- **question_id** (path parameter): The unique identifier of the question that you want to delete. This parameter is required."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/questions/:question_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"questions",
												":question_id"
											],
											"variable": [
												{
													"key": "question_id",
													"value": "399",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Validation Error",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/questions/:question_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"questions",
												":question_id"
											],
											"variable": [
												{
													"key": "question_id",
													"value": "399",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    },\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Create Question",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"text\": \"What do cows drink?\",\n  \"answer\": \"Cows drink water.\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/questions/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"questions",
								""
							]
						},
						"description": "### POST /questions/\n\nThis endpoint allows users to submit a new question along with its corresponding answer. Upon successful submission, the server will create a new question entry and return a confirmation response.\n\n#### Request Body Format\n\nThe request must be sent as a JSON object in the raw request body. The expected structure includes the following fields:\n\n- **text** (string): The question being asked.\n    \n- **answer** (string): The answer to the question.\n    \n\n**Example Request Body:**\n\n``` json\n{\n  \"text\": \"What do cows drink?\",\n  \"answer\": \"Cows drink water.\"\n}\n\n ```\n\n#### Response Structure\n\nUpon a successful request, the server will respond with a status code of 201 (Created) and a JSON object containing the following fields:\n\n- **message** (string): A message indicating the result of the operation (may be empty).\n    \n- **question** (object): An object representing the created question, which includes:\n    \n    - **text** (string): The text of the question.\n        \n    - **answer** (string): The answer to the question.\n        \n    - **id** (integer): The unique identifier assigned to the question."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"text\": \"string\",\n  \"answer\": \"string\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/questions/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"questions",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Validation Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"text\": \"string\",\n  \"answer\": \"string\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/questions/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"questions",
										""
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    },\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Get Questions Paginated",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/questions/all?page=1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"questions",
								"all"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								}
							]
						},
						"description": "### Get All Questions\n\nThis endpoint retrieves a list of all questions available in the system, supporting pagination through the `page` query parameter.\n\n#### Request\n\n- **Method**: GET\n    \n- **Endpoint**: `{{baseUrl}}/questions/all`\n    \n- **Query Parameters**:\n    \n    - `page` (integer, required): The page number of the results to retrieve. For example, to get the first page, set `page=1`.\n        \n\n#### Response\n\n- **Status Code**: 200 OK\n    \n- **Content-Type**: application/json\n    \n\nThe response will contain a JSON object with the following structure:\n\n``` json\n{\n  \"questions\": [\n    {\n      \"text\": \"string\",\n      \"answer\": \"string\",\n      \"id\": \"integer\"\n    }\n  ],\n  \"page\": \"integer\",\n  \"total_pages\": \"integer\"\n}\n\n ```\n\n- **questions**: An array of question objects, each containing:\n    \n    - `text`: The text of the question.\n        \n    - `answer`: The answer to the question.\n        \n    - `id`: A unique identifier for the question.\n        \n- **page**: The current page number of the results.\n    \n- **total_pages**: The total number of pages available for the questions."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/questions/all?page=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"questions",
										"all"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Validation Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/questions/all?page=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"questions",
										"all"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    },\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "submissions",
			"item": [
				{
					"name": "{submission_id}",
					"item": [
						{
							"name": "Get Submission",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/submissions/:submission_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"submissions",
										":submission_id"
									],
									"variable": [
										{
											"key": "submission_id",
											"value": "4",
											"description": "(Required) "
										}
									]
								},
								"description": "### Endpoint Description\n\nThis endpoint retrieves the details of a specific submission based on the provided submission ID. It is a `GET` request that allows users to access information about a submission, including the associated student, assignment, grade, and submission timestamp.\n\n### Request Parameters\n\n- `submission_id` (path parameter): The unique identifier for the submission you wish to retrieve. This parameter is required.\n    \n\n### Response Structure\n\nOn a successful request, the API responds with a JSON object containing the following fields:\n\n- `submission` (object): An object representing the submission details.\n    \n    - `student_id` (integer): The unique identifier of the student who made the submission.\n        \n    - `assignment_id` (integer): The unique identifier of the assignment related to this submission.\n        \n    - `grade` (integer): The grade awarded for the submission.\n        \n    - `id` (integer): The unique identifier of the submission.\n        \n    - `submitted_at` (string): The timestamp indicating when the submission was made.\n        \n\n### Example Response\n\n``` json\n{\n  \"submission\": {\n    \"student_id\": 0,\n    \"assignment_id\": 0,\n    \"grade\": 0,\n    \"id\": 0,\n    \"submitted_at\": \"\"\n  }\n}\n\n ```\n\nThis response structure provides a comprehensive view of the submission, allowing users to understand the context and details of the submission made by a student for a specific assignment."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/submissions/:submission_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"submissions",
												":submission_id"
											],
											"variable": [
												{
													"key": "submission_id",
													"value": "9946",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Validation Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/submissions/:submission_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"submissions",
												":submission_id"
											],
											"variable": [
												{
													"key": "submission_id",
													"value": "9946",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    },\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Delete Submission",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/submissions/:submission_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"submissions",
										":submission_id"
									],
									"variable": [
										{
											"key": "submission_id",
											"value": "1",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/submissions/:submission_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"submissions",
												":submission_id"
											],
											"variable": [
												{
													"key": "submission_id",
													"value": "9946",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Validation Error",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/submissions/:submission_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"submissions",
												":submission_id"
											],
											"variable": [
												{
													"key": "submission_id",
													"value": "9946",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    },\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Create Submission",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"student_id\": 6,\n  \"assignment_id\": 13,\n  \"question_answers\":[\n    {\n        \"question_id\":1,\n        \"answer\":\"The sun is white.\"\n\n    },\n    {\n        \"question_id\":5,\n        \"answer\":\"Cow drinks juice.\"\n\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/submissions/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"submissions",
								""
							]
						},
						"description": "### Create Submission\n\nThis API endpoint allows you to create a new submission for a student on a specific assignment. It is used to submit answers to questions associated with the assignment and does various kinds of validations.\n\n#### Request Format\n\n**HTTP Method:** POST  \n**Endpoint:** `{{baseUrl}}/submissions/`\n\n**Request Body:**  \nThe request body should be in JSON format and must include the following parameters:\n\n- `student_id` (integer): The ID of the student making the submission.\n    \n- `assignment_id` (integer): The ID of the assignment for which the submission is being made.\n    \n- `question_answers` (array): A list of answers to the questions in the assignment, where each answer is represented as an object containing:\n    \n    - `question_id` (integer): The ID of the question being answered.\n        \n    - `answer` (string): The answer provided by the student.\n        \n\n**Example Request Body:**\n\n``` json\n{\n  \"student_id\": 6,\n  \"assignment_id\": 2,\n  \"question_answers\": [\n    {\n      \"question_id\": 1,\n      \"answer\": \"The sky is yellow-blue.\"\n    }\n  ]\n}\n\n ```"
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"student_id\": 1038,\n  \"assignment_id\": 9805,\n  \"grade\": 5120.639495791045\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/submissions/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"submissions",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Validation Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"student_id\": 1038,\n  \"assignment_id\": 9805,\n  \"grade\": 5120.639495791045\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/submissions/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"submissions",
										""
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    },\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Get Student Latest Submission",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/submissions/student-latest/:student_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"submissions",
								"student-latest",
								":student_id"
							],
							"variable": [
								{
									"key": "student_id",
									"value": "6",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/submissions/student-latest/:student_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"submissions",
										"student-latest",
										":student_id"
									],
									"variable": [
										{
											"key": "student_id",
											"value": "9749",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Validation Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/submissions/student-latest/:student_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"submissions",
										"student-latest",
										":student_id"
									],
									"variable": [
										{
											"key": "student_id",
											"value": "9749",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    },\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Submissions Sort",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/submissions/list/:student_id?sort_fields=-grade",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"submissions",
								"list",
								":student_id"
							],
							"query": [
								{
									"key": "sort_fields",
									"value": "-grade"
								}
							],
							"variable": [
								{
									"key": "student_id",
									"value": "6",
									"description": "(Required) "
								}
							]
						},
						"description": "### Get Student Submissions\n\nThis endpoint retrieves a list of submissions for a specific student identified by their `student_id`. The results can be sorted by the specified fields.\n\n#### Request Method\n\n`GET`\n\n#### Endpoint\n\n`{{baseUrl}}/submissions/list/:student_id`\n\n#### URL Parameters\n\n- `student_id` (required): The unique identifier for the student whose submissions are being requested.\n    \n\n#### Query Parameters\n\n- `sort_fields` (optional): A field to sort the results. Prefixing a field with a minus sign (`-`) indicates descending order."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/submissions/list/:student_id?sort_fields=-submitted_at",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"submissions",
										"list",
										":student_id"
									],
									"query": [
										{
											"key": "sort_fields",
											"value": "-submitted_at"
										}
									],
									"variable": [
										{
											"key": "student_id",
											"value": "9749",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Validation Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/submissions/list/:student_id?sort_fields=-submitted_at",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"submissions",
										"list",
										":student_id"
									],
									"query": [
										{
											"key": "sort_fields",
											"value": "-submitted_at"
										}
									],
									"variable": [
										{
											"key": "student_id",
											"value": "9749",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    },\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "Retry Submission",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/grading/retry_grading/:submission_id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"grading",
						"retry_grading",
						":submission_id"
					],
					"variable": [
						{
							"key": "submission_id",
							"value": "2",
							"description": "(Required) "
						}
					]
				},
				"description": "## Retry Grading Endpoint\n\nThis endpoint allows users to retry the grading process for a specific submission identified by the `submission_id`. It is typically used when a previous grading attempt needs to be re-evaluated.\n\n### Request\n\n- **Method**: POST\n    \n- **URL**: `{{baseUrl}}/grading/retry_grading/:submission_id`\n    \n- **Path Parameter**:\n    \n    - `submission_id`: The unique identifier for the submission that needs to be re-graded.\n        \n- **Request Body**:\n    \n    - The request body is expected to be empty (`{}`) for this endpoint."
			},
			"response": [
				{
					"name": "Successful Response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/grading/retry_grading/:submission_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"grading",
								"retry_grading",
								":submission_id"
							],
							"variable": [
								{
									"key": "submission_id",
									"value": "9946",
									"description": "(Required) "
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{}"
				},
				{
					"name": "Validation Error",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/grading/retry_grading/:submission_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"grading",
								"retry_grading",
								":submission_id"
							],
							"variable": [
								{
									"key": "submission_id",
									"value": "9946",
									"description": "(Required) "
								}
							]
						}
					},
					"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
					"code": 422,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    },\n    {\n      \"loc\": [\n        \"string\",\n        \"string\"\n      ],\n      \"msg\": \"string\",\n      \"type\": \"string\"\n    }\n  ]\n}"
				}
			]
		},
		{
			"name": "Root",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						""
					]
				},
				"description": "# GET Request to Root Endpoint\n\nThis endpoint retrieves a simple message from the server. It is designed to provide a quick check of the server's availability and functionality."
			},
			"response": [
				{
					"name": "Successful Response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								""
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{}"
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "/",
			"type": "string"
		}
	]
}